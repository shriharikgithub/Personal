@startuml

title __PRODUCERCONSUMERSEMAPHORE's Class Diagram__\n

  namespace  {
    namespace ultithreading.producerconsumersemaphore {
      class multithreading.producerconsumersemaphore.Consumer {
          ~ consumerNumber : int
          ~ consumerSemaphore : Semaphore
          ~ producerSemaphore : Semaphore
          + run()
          ~ Consumer()
      }
    }
  }
  

  namespace  {
    namespace ultithreading.producerconsumersemaphore {
      class multithreading.producerconsumersemaphore.Main {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace ultithreading.producerconsumersemaphore {
      class multithreading.producerconsumersemaphore.Producer {
          ~ consumerSemaphore : Semaphore
          ~ producerNumber : int
          ~ producerSemaphore : Semaphore
          + run()
          ~ Producer()
      }
    }
  }
  

  namespace  {
    namespace ultithreading.producerconsumersemaphore {
      class multithreading.producerconsumersemaphore.Store {
          ~ list : Queue<Object>
          ~ maxItems : int
          + addItem()
          + removeItem()
          ~ Store()
      }
    }
  }
  

  multithreading.producerconsumersemaphore.Consumer .up.|> java.lang.Runnable
  multithreading.producerconsumersemaphore.Consumer o-- multithreading.producerconsumersemaphore.Store : store
  multithreading.producerconsumersemaphore.Producer .up.|> java.lang.Runnable
  multithreading.producerconsumersemaphore.Producer o-- multithreading.producerconsumersemaphore.Store : store


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
